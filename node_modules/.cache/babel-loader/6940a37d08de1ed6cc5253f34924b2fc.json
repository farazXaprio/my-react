{"ast":null,"code":"var _jsxFileName = \"C:\\\\Faraz\\\\Learn\\\\myreact\\\\src\\\\examples\\\\Navbars\\\\DashboardNavbar\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // react-router components\n\nimport { useLocation, Link } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @material-ui core components\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\"; // Soft UI Dashboard React components\n\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\nimport SoftInput from \"components/SoftInput\"; // Soft UI Dashboard React examples\n\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\"; // Custom styles for DashboardNavbar\n\nimport { navbar, navbarContainer, navbarRow, navbarIconButton, navbarMobileMenu } from \"examples/Navbars/DashboardNavbar/styles\"; // Soft UI Dashboard React context\n\nimport { useSoftUIController, setTransparentNavbar, setMiniSidenav, setOpenConfigurator } from \"context\"; // Images\n\nimport team2 from \"assets/images/team-2.jpg\";\nimport logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardNavbar(_ref) {\n  _s();\n\n  let {\n    absolute,\n    light,\n    isMini\n  } = _ref;\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useSoftUIController();\n  const {\n    miniSidenav,\n    transparentNavbar,\n    fixedNavbar,\n    openConfigurator\n  } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const route = useLocation().pathname.split(\"/\").slice(1);\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    } // A function that sets the transparent state of the navbar.\n\n\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, fixedNavbar && window.scrollY === 0 || !fixedNavbar);\n    }\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n\n\n    window.addEventListener(\"scroll\", handleTransparentNavbar); // Call the handleTransparentNavbar function to set the state with the initial value.\n\n    handleTransparentNavbar(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n  const handleMiniSidenav = () => setMiniSidenav(dispatch, !miniSidenav);\n\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n\n  const handleOpenMenu = event => setOpenMenu(event.currentTarget);\n\n  const handleCloseMenu = () => setOpenMenu(false); // Render the notifications menu\n\n\n  const renderMenu = () => /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: openMenu,\n    anchorReference: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: Boolean(openMenu),\n    onClose: handleCloseMenu,\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(NotificationItem, {\n      image: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: team2,\n        alt: \"person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }, this),\n      title: [\"New message\", \"from Laur\"],\n      date: \"13 minutes ago\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n      image: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoSpotify,\n        alt: \"person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }, this),\n      title: [\"New album\", \"by Travis Scott\"],\n      date: \"1 day\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationItem, {\n      color: \"secondary\",\n      image: /*#__PURE__*/_jsxDEV(Icon, {\n        fontSize: \"small\",\n        sx: {\n          color: _ref2 => {\n            let {\n              palette: {\n                white\n              }\n            } = _ref2;\n            return white.main;\n          }\n        },\n        children: \"payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this),\n      title: [\"\", \"Payment successfully completed\"],\n      date: \"2 days\",\n      onClick: handleCloseMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: absolute ? \"absolute\" : navbarType,\n    color: \"inherit\",\n    sx: theme => navbar(theme, {\n      transparentNavbar,\n      absolute,\n      light\n    }),\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: theme => navbarContainer(theme),\n      children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n        color: \"inherit\",\n        mb: {\n          xs: 1,\n          md: 0\n        },\n        sx: theme => navbarRow(theme, {\n          isMini\n        }),\n        children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          icon: \"home\",\n          title: route[route.length - 1],\n          route: route,\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), isMini ? null : /*#__PURE__*/_jsxDEV(SoftBox, {\n        sx: theme => navbarRow(theme, {\n          isMini\n        }),\n        children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n          pr: 1,\n          children: /*#__PURE__*/_jsxDEV(SoftInput, {\n            placeholder: \"Type here...\",\n            icon: {\n              component: \"search\",\n              direction: \"left\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n          color: light ? \"white\" : \"inherit\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/authentication/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: navbarIconButton,\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                sx: _ref3 => {\n                  let {\n                    palette: {\n                      dark,\n                      white\n                    }\n                  } = _ref3;\n                  return {\n                    color: light ? white.main : dark.main\n                  };\n                },\n                children: \"account_circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SoftTypography, {\n                variant: \"button\",\n                fontWeight: \"medium\",\n                color: light ? \"white\" : \"dark\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            sx: navbarMobileMenu,\n            onClick: handleMiniSidenav,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: light ? \"text-white\" : \"text-dark\",\n              children: miniSidenav ? \"menu_open\" : \"menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            sx: navbarIconButton,\n            onClick: handleConfiguratorOpen,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"inherit\",\n            sx: navbarIconButton,\n            \"aria-controls\": \"notification-menu\",\n            \"aria-haspopup\": \"true\",\n            variant: \"contained\",\n            onClick: handleOpenMenu,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: light ? \"text-white\" : \"text-dark\",\n              children: \"notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), renderMenu()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DashboardNavbar\n\n\n_s(DashboardNavbar, \"T+lPVuE0xH5NGUnnjGjEVsWQUlY=\", false, function () {\n  return [useSoftUIController, useLocation];\n});\n\n_c = DashboardNavbar;\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false\n}; // Typechecking props for the DashboardNavbar\n\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool\n};\nexport default DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"names":["useState","useEffect","useLocation","Link","PropTypes","AppBar","Toolbar","IconButton","Menu","Icon","SoftBox","SoftTypography","SoftInput","Breadcrumbs","NotificationItem","navbar","navbarContainer","navbarRow","navbarIconButton","navbarMobileMenu","useSoftUIController","setTransparentNavbar","setMiniSidenav","setOpenConfigurator","team2","logoSpotify","DashboardNavbar","absolute","light","isMini","navbarType","setNavbarType","controller","dispatch","miniSidenav","transparentNavbar","fixedNavbar","openConfigurator","openMenu","setOpenMenu","route","pathname","split","slice","handleTransparentNavbar","window","scrollY","addEventListener","removeEventListener","handleMiniSidenav","handleConfiguratorOpen","handleOpenMenu","event","currentTarget","handleCloseMenu","renderMenu","vertical","horizontal","Boolean","mt","color","palette","white","main","theme","xs","md","length","component","direction","dark","defaultProps","propTypes","bool"],"sources":["C:/Faraz/Learn/myreact/src/examples/Navbars/DashboardNavbar/index.js"],"sourcesContent":["/**\n=========================================================\n* Soft UI Dashboard React - v4.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/soft-ui-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { useLocation, Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @material-ui core components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\";\n\n// Soft UI Dashboard React components\nimport SoftBox from \"components/SoftBox\";\nimport SoftTypography from \"components/SoftTypography\";\nimport SoftInput from \"components/SoftInput\";\n\n// Soft UI Dashboard React examples\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\";\n\n// Custom styles for DashboardNavbar\nimport {\n  navbar,\n  navbarContainer,\n  navbarRow,\n  navbarIconButton,\n  navbarMobileMenu,\n} from \"examples/Navbars/DashboardNavbar/styles\";\n\n// Soft UI Dashboard React context\nimport {\n  useSoftUIController,\n  setTransparentNavbar,\n  setMiniSidenav,\n  setOpenConfigurator,\n} from \"context\";\n\n// Images\nimport team2 from \"assets/images/team-2.jpg\";\nimport logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n\nfunction DashboardNavbar({ absolute, light, isMini }) {\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useSoftUIController();\n  const { miniSidenav, transparentNavbar, fixedNavbar, openConfigurator } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const route = useLocation().pathname.split(\"/\").slice(1);\n\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    }\n\n    // A function that sets the transparent state of the navbar.\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, (fixedNavbar && window.scrollY === 0) || !fixedNavbar);\n    }\n\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n    window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n    // Call the handleTransparentNavbar function to set the state with the initial value.\n    handleTransparentNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n  const handleMiniSidenav = () => setMiniSidenav(dispatch, !miniSidenav);\n  const handleConfiguratorOpen = () => setOpenConfigurator(dispatch, !openConfigurator);\n  const handleOpenMenu = (event) => setOpenMenu(event.currentTarget);\n  const handleCloseMenu = () => setOpenMenu(false);\n\n  // Render the notifications menu\n  const renderMenu = () => (\n    <Menu\n      anchorEl={openMenu}\n      anchorReference={null}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={Boolean(openMenu)}\n      onClose={handleCloseMenu}\n      sx={{ mt: 2 }}\n    >\n      <NotificationItem\n        image={<img src={team2} alt=\"person\" />}\n        title={[\"New message\", \"from Laur\"]}\n        date=\"13 minutes ago\"\n        onClick={handleCloseMenu}\n      />\n      <NotificationItem\n        image={<img src={logoSpotify} alt=\"person\" />}\n        title={[\"New album\", \"by Travis Scott\"]}\n        date=\"1 day\"\n        onClick={handleCloseMenu}\n      />\n      <NotificationItem\n        color=\"secondary\"\n        image={\n          <Icon fontSize=\"small\" sx={{ color: ({ palette: { white } }) => white.main }}>\n            payment\n          </Icon>\n        }\n        title={[\"\", \"Payment successfully completed\"]}\n        date=\"2 days\"\n        onClick={handleCloseMenu}\n      />\n    </Menu>\n  );\n\n  return (\n    <AppBar\n      position={absolute ? \"absolute\" : navbarType}\n      color=\"inherit\"\n      sx={(theme) => navbar(theme, { transparentNavbar, absolute, light })}\n    >\n      <Toolbar sx={(theme) => navbarContainer(theme)}>\n        <SoftBox color=\"inherit\" mb={{ xs: 1, md: 0 }} sx={(theme) => navbarRow(theme, { isMini })}>\n          <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n        </SoftBox>\n        {isMini ? null : (\n          <SoftBox sx={(theme) => navbarRow(theme, { isMini })}>\n            <SoftBox pr={1}>\n              <SoftInput\n                placeholder=\"Type here...\"\n                icon={{ component: \"search\", direction: \"left\" }}\n              />\n            </SoftBox>\n            <SoftBox color={light ? \"white\" : \"inherit\"}>\n              <Link to=\"/authentication/sign-in\">\n                <IconButton sx={navbarIconButton} size=\"small\">\n                  <Icon\n                    sx={({ palette: { dark, white } }) => ({\n                      color: light ? white.main : dark.main,\n                    })}\n                  >\n                    account_circle\n                  </Icon>\n                  <SoftTypography\n                    variant=\"button\"\n                    fontWeight=\"medium\"\n                    color={light ? \"white\" : \"dark\"}\n                  >\n                    Sign in\n                  </SoftTypography>\n                </IconButton>\n              </Link>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                sx={navbarMobileMenu}\n                onClick={handleMiniSidenav}\n              >\n                <Icon className={light ? \"text-white\" : \"text-dark\"}>\n                  {miniSidenav ? \"menu_open\" : \"menu\"}\n                </Icon>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                sx={navbarIconButton}\n                onClick={handleConfiguratorOpen}\n              >\n                <Icon>settings</Icon>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                color=\"inherit\"\n                sx={navbarIconButton}\n                aria-controls=\"notification-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                onClick={handleOpenMenu}\n              >\n                <Icon className={light ? \"text-white\" : \"text-dark\"}>notifications</Icon>\n              </IconButton>\n              {renderMenu()}\n            </SoftBox>\n          </SoftBox>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n// Setting default values for the props of DashboardNavbar\nDashboardNavbar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false,\n};\n\n// Typechecking props for the DashboardNavbar\nDashboardNavbar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool,\n};\n\nexport default DashboardNavbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}